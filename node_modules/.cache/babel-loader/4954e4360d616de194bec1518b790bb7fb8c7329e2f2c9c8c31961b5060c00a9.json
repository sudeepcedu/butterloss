{"ast":null,"code":"var _jsxFileName = \"/Users/sudeepch/butterloss/src/components/WeightLoss.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { format, parseISO } from 'date-fns';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport './WeightLoss.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeightLoss = ({\n  logs,\n  targetWeight,\n  onLogSubmit,\n  currentWeight\n}) => {\n  _s();\n  const [showWeightForm, setShowWeightForm] = useState(false);\n  const [weight, setWeight] = useState('');\n  const [selectedDate, setSelectedDate] = useState(format(new Date(), 'yyyy-MM-dd'));\n\n  // Filter logs that have weight recorded\n  const weightLogs = logs.filter(log => log.weight !== null).sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n  const handleWeightSubmit = e => {\n    e.preventDefault();\n\n    // Check if a log for the selected date already exists\n    const existingLogIndex = logs.findIndex(log => log.date === selectedDate);\n    if (existingLogIndex >= 0) {\n      // Update existing log with weight\n      const updatedLog = {\n        ...logs[existingLogIndex],\n        weight: parseFloat(weight)\n      };\n      onLogSubmit(updatedLog);\n    } else {\n      // Create new log with weight only\n      const newLog = {\n        date: selectedDate,\n        deficit: 0,\n        weight: parseFloat(weight)\n      };\n      onLogSubmit(newLog);\n    }\n    setWeight('');\n    setSelectedDate(format(new Date(), 'yyyy-MM-dd')); // Reset to today\n    setShowWeightForm(false);\n  };\n  const handleDateInputClick = e => {\n    var _e$currentTarget$show, _e$currentTarget;\n    // Open the date picker\n    (_e$currentTarget$show = (_e$currentTarget = e.currentTarget).showPicker) === null || _e$currentTarget$show === void 0 ? void 0 : _e$currentTarget$show.call(_e$currentTarget);\n  };\n  const chartData = weightLogs.map(log => ({\n    date: format(parseISO(log.date), 'MMM dd'),\n    weight: log.weight,\n    deficit: log.deficit\n  }));\n\n  // Calculate weight loss statistics\n  const totalEntries = weightLogs.length;\n  const totalChange = weightLogs.length > 0 ? weightLogs[0].weight - weightLogs[weightLogs.length - 1].weight : 0;\n  const progressToGoal = weightLogs.length > 0 ? (() => {\n    const startingWeight = weightLogs[weightLogs.length - 1].weight;\n    const weightDifference = startingWeight - targetWeight;\n\n    // If starting weight equals target weight, no progress needed\n    if (weightDifference === 0) {\n      return currentWeight === targetWeight ? 100 : 0;\n    }\n\n    // Calculate how much weight has been lost from starting weight\n    const weightLost = startingWeight - currentWeight;\n\n    // Calculate progress: weight lost / total weight to lose\n    return Math.min(Math.max(weightLost / weightDifference * 100, 0), 100);\n  })() : 0;\n  if (weightLogs.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weight-loss\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u2696\\uFE0F Weight Loss Tracking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weight-log-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Log Your Weight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Start tracking your weight progress by logging your current weight.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), !showWeightForm ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"log-weight-btn\",\n          onClick: () => setShowWeightForm(true),\n          children: \"\\uD83D\\uDCDD Log Weight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleWeightSubmit,\n          className: \"weight-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"weight-date\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"weight-date\",\n              value: selectedDate,\n              onChange: e => setSelectedDate(e.target.value),\n              onClick: handleDateInputClick,\n              max: format(new Date(), 'yyyy-MM-dd') // Can't log future dates\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"weight\",\n              children: \"Weight (kg)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"weight\",\n              value: weight,\n              onChange: e => setWeight(e.target.value),\n              required: true,\n              min: \"30\",\n              max: \"300\",\n              step: \"0.1\",\n              placeholder: \"Enter weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"save-btn\",\n              children: \"Save Weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"cancel-btn\",\n              onClick: () => {\n                setShowWeightForm(false);\n                setWeight('');\n                setSelectedDate(format(new Date(), 'yyyy-MM-dd'));\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-icon\",\n          children: \"\\uD83D\\uDCC8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No weight entries recorded yet. Start logging your weight to see your progress chart!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weight-loss\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u2696\\uFE0F Weight Loss Tracking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weight-log-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Log Your Weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Keep track of your weight progress by logging regularly.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), !showWeightForm ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"log-weight-btn\",\n        onClick: () => setShowWeightForm(true),\n        children: \"\\uD83D\\uDCDD Log Weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleWeightSubmit,\n        className: \"weight-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"weight-date\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"weight-date\",\n            value: selectedDate,\n            onChange: e => setSelectedDate(e.target.value),\n            onClick: handleDateInputClick,\n            max: format(new Date(), 'yyyy-MM-dd') // Can't log future dates\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"weight\",\n            children: \"Weight (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"weight\",\n            value: weight,\n            onChange: e => setWeight(e.target.value),\n            required: true,\n            min: \"30\",\n            max: \"300\",\n            step: \"0.1\",\n            placeholder: \"Enter weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"save-btn\",\n            children: \"Save Weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"cancel-btn\",\n            onClick: () => {\n              setShowWeightForm(false);\n              setWeight('');\n              setSelectedDate(format(new Date(), 'yyyy-MM-dd'));\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weight-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: totalEntries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Weight Entries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: totalChange.toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Total Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-unit\",\n          children: \"kg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: [progressToGoal.toFixed(1), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Progress to Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weight-chart\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83D\\uDCCA Weight Progress Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: chartData,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"weight\",\n              stroke: \"#667eea\",\n              strokeWidth: 3,\n              dot: {\n                fill: '#667eea',\n                strokeWidth: 2,\n                r: 4\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weight-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83D\\uDCCB Weight Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date Recorded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Weight (kg)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: weightLogs.map((log, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: format(parseISO(log.date), 'MMM dd, yyyy')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: log.weight\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(WeightLoss, \"SQ287ON/31sKbpOS1uo9s1gpDAs=\");\n_c = WeightLoss;\nexport default WeightLoss;\nvar _c;\n$RefreshReg$(_c, \"WeightLoss\");","map":{"version":3,"names":["React","useState","format","parseISO","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","WeightLoss","logs","targetWeight","onLogSubmit","currentWeight","_s","showWeightForm","setShowWeightForm","weight","setWeight","selectedDate","setSelectedDate","Date","weightLogs","filter","log","sort","a","b","date","getTime","handleWeightSubmit","e","preventDefault","existingLogIndex","findIndex","updatedLog","parseFloat","newLog","deficit","handleDateInputClick","_e$currentTarget$show","_e$currentTarget","currentTarget","showPicker","call","chartData","map","totalEntries","length","totalChange","progressToGoal","startingWeight","weightDifference","weightLost","Math","min","max","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","id","value","onChange","target","required","step","placeholder","toFixed","width","height","data","strokeDasharray","dataKey","stroke","strokeWidth","dot","fill","r","index","_c","$RefreshReg$"],"sources":["/Users/sudeepch/butterloss/src/components/WeightLoss.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { DailyLog } from '../types';\nimport { format, parseISO } from 'date-fns';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport './WeightLoss.css';\n\ninterface WeightLossProps {\n  logs: DailyLog[];\n  targetWeight: number;\n  onLogSubmit: (log: DailyLog) => void;\n  currentWeight: number;\n}\n\nconst WeightLoss: React.FC<WeightLossProps> = ({ logs, targetWeight, onLogSubmit, currentWeight }) => {\n  const [showWeightForm, setShowWeightForm] = useState(false);\n  const [weight, setWeight] = useState('');\n  const [selectedDate, setSelectedDate] = useState(format(new Date(), 'yyyy-MM-dd'));\n\n  // Filter logs that have weight recorded\n  const weightLogs = logs.filter(log => log.weight !== null).sort((a, b) => \n    new Date(a.date).getTime() - new Date(b.date).getTime()\n  );\n\n  const handleWeightSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Check if a log for the selected date already exists\n    const existingLogIndex = logs.findIndex(log => log.date === selectedDate);\n    \n    if (existingLogIndex >= 0) {\n      // Update existing log with weight\n      const updatedLog: DailyLog = {\n        ...logs[existingLogIndex],\n        weight: parseFloat(weight)\n      };\n      onLogSubmit(updatedLog);\n    } else {\n      // Create new log with weight only\n      const newLog: DailyLog = {\n        date: selectedDate,\n        deficit: 0,\n        weight: parseFloat(weight)\n      };\n      onLogSubmit(newLog);\n    }\n    \n    setWeight('');\n    setSelectedDate(format(new Date(), 'yyyy-MM-dd')); // Reset to today\n    setShowWeightForm(false);\n  };\n\n  const handleDateInputClick = (e: React.MouseEvent<HTMLInputElement>) => {\n    // Open the date picker\n    e.currentTarget.showPicker?.();\n  };\n\n  const chartData = weightLogs.map(log => ({\n    date: format(parseISO(log.date), 'MMM dd'),\n    weight: log.weight,\n    deficit: log.deficit\n  }));\n\n  // Calculate weight loss statistics\n  const totalEntries = weightLogs.length;\n  const totalChange = weightLogs.length > 0 \n    ? (weightLogs[0].weight! - weightLogs[weightLogs.length - 1].weight!) \n    : 0;\n  const progressToGoal = weightLogs.length > 0 \n    ? (() => {\n        const startingWeight = weightLogs[weightLogs.length - 1].weight!;\n        const weightDifference = startingWeight - targetWeight;\n        \n        // If starting weight equals target weight, no progress needed\n        if (weightDifference === 0) {\n          return currentWeight === targetWeight ? 100 : 0;\n        }\n        \n        // Calculate how much weight has been lost from starting weight\n        const weightLost = startingWeight - currentWeight;\n        \n        // Calculate progress: weight lost / total weight to lose\n        return Math.min(Math.max((weightLost / weightDifference) * 100, 0), 100);\n      })()\n    : 0;\n\n  if (weightLogs.length === 0) {\n    return (\n      <div className=\"weight-loss\">\n        <h3>⚖️ Weight Loss Tracking</h3>\n        \n        <div className=\"weight-log-section\">\n          <h4>Log Your Weight</h4>\n          <p>Start tracking your weight progress by logging your current weight.</p>\n          \n          {!showWeightForm ? (\n            <button \n              className=\"log-weight-btn\"\n              onClick={() => setShowWeightForm(true)}\n            >\n              📝 Log Weight\n            </button>\n          ) : (\n            <form onSubmit={handleWeightSubmit} className=\"weight-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"weight-date\">Date</label>\n                <input\n                  type=\"date\"\n                  id=\"weight-date\"\n                  value={selectedDate}\n                  onChange={(e) => setSelectedDate(e.target.value)}\n                  onClick={handleDateInputClick}\n                  max={format(new Date(), 'yyyy-MM-dd')} // Can't log future dates\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"weight\">Weight (kg)</label>\n                <input\n                  type=\"number\"\n                  id=\"weight\"\n                  value={weight}\n                  onChange={(e) => setWeight(e.target.value)}\n                  required\n                  min=\"30\"\n                  max=\"300\"\n                  step=\"0.1\"\n                  placeholder=\"Enter weight\"\n                />\n              </div>\n              \n              <div className=\"form-actions\">\n                <button type=\"submit\" className=\"save-btn\">\n                  Save Weight\n                </button>\n                <button \n                  type=\"button\" \n                  className=\"cancel-btn\"\n                  onClick={() => {\n                    setShowWeightForm(false);\n                    setWeight('');\n                    setSelectedDate(format(new Date(), 'yyyy-MM-dd'));\n                  }}\n                >\n                  Cancel\n                </button>\n              </div>\n            </form>\n          )}\n        </div>\n\n        <div className=\"empty-state\">\n          <div className=\"empty-icon\">📈</div>\n          <p>No weight entries recorded yet. Start logging your weight to see your progress chart!</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"weight-loss\">\n      <h3>⚖️ Weight Loss Tracking</h3>\n      \n      <div className=\"weight-log-section\">\n        <h4>Log Your Weight</h4>\n        <p>Keep track of your weight progress by logging regularly.</p>\n        \n        {!showWeightForm ? (\n          <button \n            className=\"log-weight-btn\"\n            onClick={() => setShowWeightForm(true)}\n          >\n            📝 Log Weight\n          </button>\n        ) : (\n          <form onSubmit={handleWeightSubmit} className=\"weight-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"weight-date\">Date</label>\n              <input\n                type=\"date\"\n                id=\"weight-date\"\n                value={selectedDate}\n                onChange={(e) => setSelectedDate(e.target.value)}\n                onClick={handleDateInputClick}\n                max={format(new Date(), 'yyyy-MM-dd')} // Can't log future dates\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"weight\">Weight (kg)</label>\n              <input\n                type=\"number\"\n                id=\"weight\"\n                value={weight}\n                onChange={(e) => setWeight(e.target.value)}\n                required\n                min=\"30\"\n                max=\"300\"\n                step=\"0.1\"\n                placeholder=\"Enter weight\"\n              />\n            </div>\n            \n            <div className=\"form-actions\">\n              <button type=\"submit\" className=\"save-btn\">\n                Save Weight\n              </button>\n              <button \n                type=\"button\" \n                className=\"cancel-btn\"\n                onClick={() => {\n                  setShowWeightForm(false);\n                  setWeight('');\n                  setSelectedDate(format(new Date(), 'yyyy-MM-dd'));\n                }}\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        )}\n      </div>\n\n      <div className=\"weight-stats\">\n        <div className=\"stat-card\">\n          <div className=\"stat-value\">{totalEntries}</div>\n          <div className=\"stat-label\">Weight Entries</div>\n        </div>\n        <div className=\"stat-card\">\n          <div className=\"stat-value\">{totalChange.toFixed(1)}</div>\n          <div className=\"stat-label\">Total Change</div>\n          <div className=\"stat-unit\">kg</div>\n        </div>\n        <div className=\"stat-card\">\n          <div className=\"stat-value\">{progressToGoal.toFixed(1)}%</div>\n          <div className=\"stat-label\">Progress to Goal</div>\n        </div>\n      </div>\n\n      <div className=\"weight-chart\">\n        <h4>📊 Weight Progress Chart</h4>\n        <div className=\"chart-container\">\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart data={chartData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"date\" />\n              <YAxis />\n              <Tooltip />\n              <Line \n                type=\"monotone\" \n                dataKey=\"weight\" \n                stroke=\"#667eea\" \n                strokeWidth={3}\n                dot={{ fill: '#667eea', strokeWidth: 2, r: 4 }}\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n\n      <div className=\"weight-table\">\n        <h4>📋 Weight Log</h4>\n        <div className=\"table-container\">\n          <table>\n            <thead>\n              <tr>\n                <th>Date Recorded</th>\n                <th>Weight (kg)</th>\n              </tr>\n            </thead>\n            <tbody>\n              {weightLogs.map((log, index) => (\n                <tr key={index}>\n                  <td>{format(parseISO(log.date), 'MMM dd, yyyy')}</td>\n                  <td>{log.weight}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WeightLoss; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}